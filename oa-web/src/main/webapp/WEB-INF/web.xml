<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <!-- 应用服务名称 -->
    <context-param>
        <param-name>applicationName</param-name>
        <param-value>deshan</param-value>
    </context-param>


    <!-- 加载本地配置文件 classpath*:/config/applicationContext-dubbo.xml -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
			classpath*:/config/applicationContext-dubbo.xml,
            classpath*:/config/applicationContext-datasource.xml,
            classpath*:/config/applicationContext.xml,
            classpath*:/config/quartzjob.xml,
            classpath*:/config/applicationContext-shiro.xml,
            classpath*:/casConfig/applicationContext-shiro.xml,
            classpath*:/casConfig/applicationContext-dubbo.xml

        </param-value>
    </context-param>

   <!-- 配置Spring上下文监听器 -->

    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>
    <filter>
        <filter-name>singleSignOutFilter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>singleSignOutFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置log4j配置文件路径 -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>oa</param-value>
	</context-param>

    <!-- 配置Log4j监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

	<!-- 配置Spring上下文监听器 -->

	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<listener>
	    <display-name>上下文加载监听器</display-name>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- <listener>
	    <display-name>菜单加载</display-name>
	    <listener-class>com.biz.pms.listener.menuslistener.LoaderMenusListener</listener-class>
	</listener> -->

	<!-- 配置Spring字符编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

   <filter>
        <filter-name>encoding</filter-name>
        <filter-class>cn.com.bizunited.cp.oa.oss.encoder.CharEncoding</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- shiroFilter -->
        <filter>         
        	<filter-name>shiroFilter</filter-name>         
        	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>         
        	<init-param>             
        		<param-name>targetFilterLifecycle</param-name>             
        		<param-value>true</param-value>        
         	</init-param>     
        </filter> 
            
         <filter-mapping>         
         	<filter-name>shiroFilter</filter-name>         
         	<url-pattern>/mainFrame</url-pattern>    
         </filter-mapping>    
         
          <filter-mapping> 
             <filter-name>shiroFilter</filter-name>   
            <url-pattern>/admin/*</url-pattern>   
          </filter-mapping>     
          <filter-mapping>       
              <filter-name>shiroFilter</filter-name>     
              <url-pattern>/oa/*</url-pattern>
          </filter-mapping>

    <!-- Spring MVC 核心控制器 DispatcherServlet 配置 -->
    <servlet>
        <servlet-name>springDispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:/config/applicationContext-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <servlet-mapping>
        <servlet-name>springDispatcher</servlet-name>
        <!--拦截所有 包含centerDocker 的请求 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/components/*</url-pattern>
        <url-pattern>/resources/*</url-pattern>
        <url-pattern>/bootstrap/*</url-pattern>
        <url-pattern>/dist/*</url-pattern>
        <url-pattern>/plugins/*</url-pattern>
        <url-pattern>/uploadFile/*</url-pattern>
        <url-pattern>/js/*</url-pattern>
    </servlet-mapping>


    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>

